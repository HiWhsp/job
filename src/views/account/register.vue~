<template>
  <div class="page">
    <modalTerms ref="modalTerms"/>
    <!--    <modalRich ref="modalRich"/>-->
    <div class="mask"></div>

    <div class="center">
      <div class="inner">
        <div class="mode-toggle">
          <img v-if="mode == '账号密码'" @click="mode = '微信扫码'"
               src="../../static/account/login-qrcode.png" alt=""/>
          <img v-if="mode == '微信扫码'" @click="mode = '账号密码'" src="../../static/account/login-pc.png"
               alt=""/>
        </div>

        <div class="input-wrap">
          <div class="tab-box">
            <div
                class="tab-item"
                :class="tabType == 'PASS' ? 'active' : ''"
                @click="tabType = 'PASS'"
            >
              {{ mode == "账号密码" ? "手机号注册" : "微信注册" }}
            </div>
          </div>
          <!--          手机号注册-->
          <template v-if="mode == '账号密码'">
            <div class="input-box">
              <span>手机号</span>
              <input type="text" placeholder="请输入手机号码" v-model="form.phone"/>
            </div>

            <!-- 验证码 -->
            <sms_phone :form="form"/>

            <div class="input-box">
              <span>设置密码</span>
              <!-- <img src="@img/other/icon-lock.png" alt="" /> -->
              <input type="password" placeholder="请输入密码" v-model="form.pass"/>
            </div>

            <div class="input-box">
              <span>确认密码</span>
              <!-- <img src="@img/other/icon-lock.png" alt="" /> -->
              <input
                  type="password"
                  placeholder="请输入密码"
                  v-model="form.confirm_pass"
              />
            </div>

            <div class="btn-box">
              <button class="btn-ripple" @click="retrieve_submit">确定</button>
            </div>

            <div class="register-box">
              <!-- <router-link to="/">回到主页 ></router-link> -->
              <span> <router-link to="/login">已有账号，去登录 ></router-link> </span>
            </div>

            <div class="terms-box">
              <el-checkbox v-model="agreed"></el-checkbox>
              我已认真阅读并同意 <span>《用户协议》</span>和<span>《隐私政策》</span>
            </div>
          </template>
          <!-- 扫码登录 -->
          <template v-else>
            <div class="qrcode-cit flex">
              <div class="title">
                <img src="@/static/account/login-wx.png" alt="">使用微信扫码后点击【关注公众号】注册账号
              </div>
              <div class="qrcode-box">
                <img src="../../static/account/demo-code.png" alt=""/>
                <!--                <div ref="qrCodeUrl" class="erweima"></div>-->
              </div>
              <div class="text-box flex">
                <div class="title flex">
                  <div class="col"></div>
                  <span>其他注册方式</span>
                  <div class="col"></div>
                </div>
                <div class="check flex pointer" @click="mode = '账号密码'">
                  <img src="../../static/account/phone.png" alt="">
                  <span>手机号注册</span>
                </div>
              </div>
            </div>
          </template>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import sms_phone from "@/components/login/sms_phone.vue"; //短信验证码
import utilForm from "@/util/utilForm.js";
// import SmsLogin from "@/components/login/SmsLogin.vue"; //短信验证码
import modalTerms from "@/components/modals/modalTerms.vue"; //协议弹窗
// import modalRich from "@/components/modals/modalRich.vue"; //协议弹窗

import {mapState} from "vuex";

export default {
  name: "login",
  components: {
    sms_phone,
    modalTerms,
    // modalRich,
  },
  data() {
    return {
      mode: "账号密码", //微信扫码
      tabType: "PASS", //登录方式
      agreed: false,

      form: {
        phone: "",
        code: "",
        pass: "",
        confirm_pass: "",
      },
    };
  },
  computed: {
    ...mapState(["logo"]),
  },
  created() {
  },

  methods: {
    terms_open(id) {
      this.$refs.modalRich.init(id);
    },

    retrieve_submit() {
      let reg_phone = /^1[3-9]\d{9}$/;
      let reg_email = /^([a-zA-Z\d])(\w|\-)+@[a-zA-Z\d]+\.[a-zA-Z]{2,4}$/;

      if (!reg_phone.test(this.form.phone)) {
        alertErr("请输入正确的手机号");
        return;
      }
      if (!this.form.code) {
        alertErr("请输入验证码");
        return;
      }
      if (!this.form.pass) {
        alertErr("请输入密码");
        return;
      }
      if (!this.form.confirm_pass) {
        alertErr("请输入确认密码");
        return;
      }
      if (this.form.pass != this.form.confirm_pass) {
        alertErr("两次密码不一致");
        return;
      }
      if (!this.agreed) {
        alertErr("请勾选同意协议");
        return;
      }
 
      this.$api("login_phoneReg", {
        ...this.form,
        invite_id: this.$route.query.invite || "",
      }).then((res) => {
        //console.log("注册", res);
        let {code, data, msg} = res;
        if (code == 200) {
          alertSucc(msg);
          this.$router.push("/");
        } else {
          alertErr(msg);
        }
      });
    },

    //条款
    onClick_shengming() {
      this.$router.push("/banquan");
    },
    onClick_yinsi() {
      this.$router.push("/yinsi");
    },
  },
};
</script>

<style scoped lang="less">
.page {
  width: 100%;
  position: relative;

  .mask {
    background: url(../../static/account/login-bg.png) 100% 100% no-repeat;
    background-size: cover;
    position: absolute;
    content: "";
    left: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    // opacity: 0.1;
    pointer-events: none;
  }

  .center {
    height: 780px;
    width: @width;
    margin: 0 auto;
    display: flex;
    justify-content: flex-end;
    background: transparent;
    align-items: center;
    position: relative;

    .inner {
      position: relative;
      // position: absolute;
      // left: 50%;
      // top: 50%;
      // transform: translate(-50%, -50%);
      width: 480px;
      min-height: 520px;
      height: auto;
      padding: 40px 40px 60px;
      background: #ffffff;
      opacity: 1;
      border-radius: 10px;
      overflow: hidden;
      background: #fff;
      // margin: 0 auto;

      .mode-toggle {
        position: absolute;
        right: 12px;
        top: 12px;

        img {
          width: 64px;
          cursor: pointer;
        }
      }

      .left {
      }

      .right {
        // width: 480px;
        // height: 480px;
        // background: #ffffff;
        // box-shadow: 0px 10px 20px rgba(1, 100, 98, 0.2);
        // opacity: 1;
        // border-radius: 10px;

        // padding: 40px 40px 30px 40px;
      }
    }

    .tab-box {
      margin-bottom: 40px;
      .flex-center();

      .tab-item {
        font-size: 24px;
        font-family: Microsoft YaHei-Regular, Microsoft YaHei;
        font-weight: 400;
        color: #333333;

        &:first-child {
          // &:after {
          //   content: "";
          //   display: inline-block;
          //   width: 2px;
          //   height: 24px;
          //   background-color: #ccc;
          //   margin: 0 30px;
          //   position: relative;
          //   top: 3px;
          // }
        }

        &.active {
          color: #333333;
        }
      }
    }

    .input-wrap {
      width: 400px;
      margin: 0 auto;
    }

    .input-box {
      margin-bottom: 20px;
      width: 100%;
      height: 50px;
      background: #ffffff;
      border: 1px solid #eeeeee;
      border-radius: 4px;
      .flex-between();
      overflow: hidden;

      span {
        display: inline-block;
        width: 90px; /*no */
        border-right: 1px solid #eee;

        font-size: 14px;
        font-family: Microsoft YaHei;
        font-weight: 400;
        line-height: 24px;
        color: #999999;
        text-indent: 1em;
      }

      img {
        width: 36px;
      }

      input {
        flex: 2;
        height: 100%;
        padding-left: 16px;
        font-size: 14px;
        color: #000;

        &::-webkit-input-placeholder {
          font-size: 14px;
          font-family: Microsoft YaHei-Regular, Microsoft YaHei;
          font-weight: 400;
          color: #d7d7d7;
        }
      }
    }

    .agree-box {
      text-align: left;
      margin-top: 20px;
      .flex-between();

      font-size: 14px;
      font-family: Microsoft YaHei;
      font-weight: 400;
      line-height: 24px;
      color: #999999;

      a {
        color: @theme;
      }
    }

    .btn-box {
      margin-top: 30px;

      button {
        width: 100%;
        height: 44px;
        background: linear-gradient(90deg, #ff7327 0%, #ea5959 100%);
        background: @theme;
        font-size: 18px;
        font-family: Microsoft YaHei-Regular, Microsoft YaHei;
        font-weight: 400;
        color: #ffffff;
      }
    }

    .register-box {
      text-align: center;
      margin-top: 30px;
      font-size: 14px;

      a {
        font-size: 14px;
        font-family: Microsoft YaHei;
        font-weight: 400;
        line-height: 24px;
        color: @theme;
        border-bottom: 1px solid @theme;
      }
    }
  }
}

.terms-box {
  position: absolute;
  height: 40px;
  background: #f5f6f8;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 40px;
  text-align: center;

  .el-checkbox {
    margin-right: 5px;
  }

  span {
    cursor: pointer;

    &:hover {
      color: @theme;
    }
  }
}

.qrcode-cit {
  flex-direction: column;

  .qrcode-box {
    text-align: center;
    width: 180px;
    height: 180px;
    margin-top: 25px;

    img {
      width: 180px;
      height: 180px;
    }
  }

  .title {
    font-family: Roboto, Roboto;
    font-weight: 400;
    font-size: 14px;
    color: #333333;
    font-style: normal;
    text-transform: none;

    img {
      width: 16px;
      height: 16px;
      margin-right: 5px;
    }
  }

  .text-box {
    flex-direction: column;
    margin-top: 24px;
    .flex-center();

    img {
      width: 32px;
    }

    .text {
      font-size: 16px;
      font-family: Microsoft YaHei-Regular, Microsoft YaHei;
      font-weight: 400;
      color: #333333;
    }

    .title {
      .col {
        width: 112px;
        height: 0px;
        border: 1px solid #707070;
        opacity: 0.2;
      }

      span {
        margin: 0 5px;
      }
    }

    .check {
      flex-direction: column;
      margin-top: 20px;

      img {
        width: 48px;
        height: 48px;
      }

      span {
        margin-top: 16px;
        font-family: Roboto, Roboto;
        font-weight: 400;
        font-size: 14px;
        color: #7D7D7D;
        font-style: normal;
        text-transform: none;
      }
    }
  }
}
</style>

<style scoped lang="less" src="@/assets/h5css/page/register.less"></style>
